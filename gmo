local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Check if Rayfield is loaded correctly
if not Rayfield then
    warn("Failed to load Rayfield library")
    return
end

local Window = Rayfield:CreateWindow({
    Name = "Vision Hub",
    LoadingTitle = "Vision Script",
    LoadingSubtitle = "by Vision",
    ConfigurationSaving = {
       Enabled = false,
       FileName = "Vision Script Hub"
    },
    Discord = {
       Enabled = true,
       Invite = "GYH92be25Z",
       RememberJoins = true
    },
    KeySystem = true,
    KeySettings = {
       Title = "Vision Script Hub| Key",
       Subtitle = "Link In Discord Server",
       Note = "Join Server From Misc Tab",
       FileName = "BladeBallKey",
       SaveKey = false,
       GrabKeyFromSite = true,
       Key = {"https://pastebin.com/raw/QZYyHa0H"}
    }
})

if not Window then
    warn("Failed to create window. Please check the Rayfield library or script parameters.")
    return
end

local MainTab = Window:CreateTab("Main", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Useful") -- Changed 'Tab' to 'MainTab'

MainTab:CreateToggle({
    Name = "Auto XP",
    CurrentValue = false,
    Flag = "XP_Toggle",
    Callback = function(Value)
        if Value then
            _G.Xp = true
            task.spawn(function()
                while _G.Xp do
                    local character = game.Players.LocalPlayer.Character
                    if character and character:FindFirstChild("LeftHand") then
                        local ReplicatedStorage = game:GetService("ReplicatedStorage")
                        local PhysicalEvent = ReplicatedStorage:WaitForChild("PlayerEvents"):WaitForChild("Physical")

                        -- Fire the event 10 times quickly
                        for i = 1, 10 do
                            PhysicalEvent:FireServer(true, "Steal", character, character:FindFirstChild("LeftHand"))
                        end

                        print("Kosta Did It Better.")
                    else
                        warn("Character or LeftHand missing.")
                    end

                    task.wait(0.1) -- Wait between each batch
                end
            end)
        else
            _G.Xp = false
            print("XP farming disabled.")
        end
    end,
})

MainTab:CreateToggle({
    Name = "Auto Touch",
    CurrentValue = false,
    Flag = "OOB_Toggle",
    Callback = function(Value)
        if Value then
            _G.Xp = true
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer
            local backpack = player:WaitForChild("Backpack")
            local actionValues = backpack:WaitForChild("ActionValues")
            local power = actionValues:WaitForChild("Power")

            local spamEnd = 0
            local spamRunning = false
            local lastPower = power.Value

            local function getHitbox()
                local oobs = workspace:FindFirstChild("OOBS")
                if not oobs then return nil end
                return oobs:FindFirstChild("OOB4")
            end

            local function getTouchPart()
                local char = player.Character or player.CharacterAdded:Wait()
                return char:WaitForChild("HumanoidRootPart") or char:FindFirstChildWhichIsA("BasePart")
            end

            local function ensureSpamLoop()
                if spamRunning or not _G.Xp then return end
                if typeof(firetouchinterest) ~= "function" then
                    return
                end

                spamRunning = true
                task.spawn(function()
                    local hitbox = getHitbox()
                    if not hitbox then
                        spamRunning = false
                        return
                    end

                    local toucher = getTouchPart()
                    if not toucher then
                        spamRunning = false
                        return
                    end

                    while _G.Xp and os.clock() < spamEnd do
                        firetouchinterest(toucher, hitbox, 0)
                        firetouchinterest(toucher, hitbox, 1)
                        task.wait(0)
                    end
                    spamRunning = false
                end)
            end

            power:GetPropertyChangedSignal("Value"):Connect(function()
                if not _G.Xp then return end
                local newPower = power.Value
                if newPower ~= lastPower then
                    spamEnd = os.clock() + 10
                    ensureSpamLoop()
                    lastPower = newPower
                end
            end)

            if not player.Character then
                player.CharacterAdded:Wait()
            end
        else
            _G.Xp = false
        end
    end,
})
