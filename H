-- LocalScript (client)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")
local backpack = player:WaitForChild("Backpack")
local actionValues = backpack:WaitForChild("ActionValues")
local power = actionValues:WaitForChild("Power")

-- Settings
local minPower = 62
local maxPower = 65
local shotMultiplier = 1
local firingEnabled = false
local lastInRange = false -- Track if we were in range last update

-- Touch spam state
local spamEnd = 0
local spamRunning = false

-- GUI
local screenGui = Instance.new("ScreenGui", PlayerGui)
screenGui.Name = "ShotToggleGUI"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 200, 0, 50)
frame.Position = UDim2.new(0, 20, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(1, 0, 1, 0)
toggleButton.Text = "Auto Shot: OFF"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18

toggleButton.MouseButton1Click:Connect(function()
    firingEnabled = not firingEnabled
    toggleButton.Text = firingEnabled and "Auto Shot: ON" or "Auto Shot: OFF"
    toggleButton.BackgroundColor3 = firingEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(0, 150, 255)
end)

-- Helpers
local function getHitbox()
    local oobs = workspace:FindFirstChild("OOBS")
    if not oobs then return nil end
    return oobs:FindFirstChild("OOB4")
end

local function getTouchPart()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart") or char:FindFirstChildWhichIsA("BasePart")
end

local function ensureSpamLoop()
    if spamRunning or typeof(firetouchinterest) ~= "function" then return end
    spamRunning = true
    task.spawn(function()
        local hitbox = getHitbox()
        local toucher = getTouchPart()
        if not hitbox or not toucher then
            spamRunning = false
            return
        end
        while os.clock() < spamEnd do
            firetouchinterest(toucher, hitbox, 0)
            firetouchinterest(toucher, hitbox, 1)
            task.wait()
        end
        spamRunning = false
    end)
end

local function fireShot()
    local args = {false, "Shooting", "Moving Shot"}
    local playerEvents = backpack:FindFirstChild("PlayerEvents") or ReplicatedStorage:FindFirstChild("PlayerEvents")
    if playerEvents then
        local shootingEvent = playerEvents:FindFirstChild("Shooting")
        if shootingEvent then
            for i = 1, shotMultiplier do
                shootingEvent:FireServer(unpack(args))
            end
            print("Fired", shotMultiplier, "shots in range", minPower, "-", maxPower)
            spamEnd = os.clock() + 10
            ensureSpamLoop()
        end
    end
end

-- Listen for range entry
power:GetPropertyChangedSignal("Value"):Connect(function()
    local inRange = (power.Value >= minPower and power.Value <= maxPower)
    if firingEnabled and inRange and not lastInRange then
        fireShot()
    end
    lastInRange = inRange
end)

if not player.Character then
    player.CharacterAdded:Wait()
end
